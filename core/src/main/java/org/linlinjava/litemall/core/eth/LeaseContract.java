package org.linlinjava.litemall.core.eth;


import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.4.0.
 */
public class LeaseContract extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_CHANGE_STATUS = "change_status";

    public static final String FUNC_GENERATECONTRACT = "generateContract";

    public static final String FUNC_GETENDTIME = "getEndTime";

    public static final String FUNC_GETPRICE = "getPrice";

    public static final String FUNC_GETSTARTTIME = "getStartTime";

    public static final String FUNC_GETSTAUTS = "getStauts";

    public static final String FUNC_PROVECONTRACT = "proveContract";

    protected LeaseContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected LeaseContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
    
    
    protected LeaseContract(String contractAddress, Web3j web3j, Credentials credentials,
			ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
	}
    
    protected LeaseContract(String contractAddress, Web3j web3j, TransactionManager transactionManager,
			ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
	}

    
    

    public RemoteCall<TransactionReceipt> change_status(int theStatus) {
        final Function function = new Function(
                FUNC_CHANGE_STATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(theStatus)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> generateContract(String contractSn, int userid1, int userid2, String name1, String name2, String idcard1, String idcard2,
                                                           String price, String start_time,String end_time, String update_time, String province, String city, String county,String address_detail) {
        final Function function = new Function(
                FUNC_GENERATECONTRACT, 
                Arrays.<Type>asList(
                new org.web3j.abi.datatypes.Utf8String(contractSn),
                new org.web3j.abi.datatypes.Utf8String(String.valueOf(userid1) ),
                new org.web3j.abi.datatypes.Utf8String(String.valueOf(userid2)),
                new org.web3j.abi.datatypes.Utf8String(name1),
                new org.web3j.abi.datatypes.Utf8String(name2),
                new org.web3j.abi.datatypes.Utf8String(idcard1),
                new org.web3j.abi.datatypes.Utf8String(idcard2),
                new org.web3j.abi.datatypes.Utf8String(price),
                new org.web3j.abi.datatypes.Utf8String(start_time),
                new org.web3j.abi.datatypes.Utf8String(end_time),
                new org.web3j.abi.datatypes.Utf8String(update_time),
                new org.web3j.abi.datatypes.Utf8String(province),
                new org.web3j.abi.datatypes.Utf8String(city),
                        new org.web3j.abi.datatypes.Utf8String(county),
                new org.web3j.abi.datatypes.Utf8String(address_detail)),
        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    
    public RemoteCall<Utf8String> getEndTime() {
        final Function function = new Function(
                FUNC_GETENDTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}) 
                );
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Uint256> getPrice() {
        final Function function = new Function(
                FUNC_GETPRICE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {})
                );
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getStartTime() {
        final Function function = new Function(
                FUNC_GETSTARTTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}) 
                );
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Uint256> getStauts() {
        final Function function = new Function(
                FUNC_GETSTAUTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {})
                );
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Bool> proveContract(String contractSn, int userid1, int userid2, String name1, String name2, String idcard1, String idcard2,
                                          String price, String start_time,String end_time, String update_time, String province, String city, String county,String address_detail) {
        final Function function = new Function(
                FUNC_PROVECONTRACT, 
                Arrays.<Type>asList(
                        new org.web3j.abi.datatypes.Utf8String(contractSn),
                        new org.web3j.abi.datatypes.Utf8String(String.valueOf(userid1) ),
                        new org.web3j.abi.datatypes.Utf8String(String.valueOf(userid2)),
                        new org.web3j.abi.datatypes.Utf8String(name1),
                        new org.web3j.abi.datatypes.Utf8String(name2),
                        new org.web3j.abi.datatypes.Utf8String(idcard1),
                        new org.web3j.abi.datatypes.Utf8String(idcard2),
                        new org.web3j.abi.datatypes.Utf8String(price),
                        new org.web3j.abi.datatypes.Utf8String(start_time),
                        new org.web3j.abi.datatypes.Utf8String(end_time),
                        new org.web3j.abi.datatypes.Utf8String(update_time),
                        new org.web3j.abi.datatypes.Utf8String(province),
                        new org.web3j.abi.datatypes.Utf8String(city),
                        new org.web3j.abi.datatypes.Utf8String(county),
                        new org.web3j.abi.datatypes.Utf8String(address_detail)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {})
                );
        return executeRemoteCallSingleValueReturn(function);
    }

    public static RemoteCall<LeaseContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(LeaseContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<LeaseContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(LeaseContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static LeaseContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new LeaseContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static LeaseContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new LeaseContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
